{
  "hash": "b98ab0f731c41f8d0d9ae7de600a71d0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\noutput: false\necho: false                      # set to true to show solution\ncode-fold: true                  # set to true to show solution\ncode-summary: \"Musterlösung\"    \n---\n\n\n\n\n## Übung 14\n\nNun ist es Zeit, dass ihr selbst mit *GeoDataFrames* Hand anlegt. Achtet dabei immer auf die Datentypen eurer Daten (mit `type`) und konsultiert dazu @sec-pythongis-datenstruktur. Zudem ist Geopandas gut dokumentiert, es lohnt ich diese immer wieder zu konsultieren: [geopandas.org](https://geopandas.org)\n\n<!-- % *DataFrame* zu *GeoDataFrame* -->\n## Übung  14.1\n\nImportiere *Geopandas* und wandle `zeckenstiche` in eine *GeoDataFrame* um (`zeckenstiche`). Vergiss nicht, das Koordinatenbezugssystem festzulegen!\n\n\n\n<!-- % Punkte Buffern -->\n## Übung  14.2\n\nBuffere die Zeckenstiche um eine Distanz von 12 Meter und speichere den Output in der Variabel `zeckenstiche_buffer`. Visualisiere die gebufferten Punkte mit `.explore()`.\n\n::: {#cc9fd553 .cell execution_count=2}\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> zeckenstiche_buffer <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">zeckenstiche_gpd</span><span style=\"color:rgb(98,98,98)\">.</span>buffer(<span style=\"color:rgb(98,98,98)\">12</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> zeckenstiche_buffer<span style=\"color:rgb(98,98,98)\">.</span>explore()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'zeckenstiche_gpd' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Übung  14.3\n\nExtrahiere die Umrisse von `zeckenstiche_buffer` und speichere diese in `zeckenstiche_buffer_outline`. Visualisiere anschliessend diese Umrisse.\n\n::: {#a7c90080 .cell execution_count=3}\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[3], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> zeckenstiche_buffer_outline <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">zeckenstiche_buffer</span><span style=\"color:rgb(98,98,98)\">.</span>boundary\n<span class=\"ansi-green-fg ansi-bold\">      3</span> zeckenstiche_buffer_outline<span style=\"color:rgb(98,98,98)\">.</span>explore()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'zeckenstiche_buffer' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Übung  14.4\n\nNutze nachstehenden Code um zwei Datensätze im gleichen Plot darzustellen. \n\n::: {#ef574e02 .cell execution_count=4}\n``` {.python .cell-code}\n# Nicht interaktiv:\nfrom matplotlib import pyplot as plt\nfig, ax = plt.subplots()\n\nzeckenstiche_buffer_outline.plot(ax = ax, color = \"green\")\nzeckenstiche_gpd.plot(ax = ax, color = \"pink\")\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 5</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> pyplot <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> plt\n<span class=\"ansi-green-fg ansi-bold\">      3</span> fig, ax <span style=\"color:rgb(98,98,98)\">=</span> plt<span style=\"color:rgb(98,98,98)\">.</span>subplots()\n<span class=\"ansi-green-fg\">----&gt; 5</span> <span class=\"ansi-yellow-bg\">zeckenstiche_buffer_outline</span><span style=\"color:rgb(98,98,98)\">.</span>plot(ax <span style=\"color:rgb(98,98,98)\">=</span> ax, color <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">green</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">      6</span> zeckenstiche_gpd<span style=\"color:rgb(98,98,98)\">.</span>plot(ax <span style=\"color:rgb(98,98,98)\">=</span> ax, color <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">pink</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'zeckenstiche_buffer_outline' is not defined</pre>\n```\n:::\n\n:::\n\n::: {.cell-output .cell-output-display}\n![](6_Uebung_14_files/figure-html/cell-5-output-2.png){width=581 height=416}\n:::\n:::\n\n\n::: {#0a8cfecf .cell execution_count=5}\n``` {.python .cell-code}\n# Interaktiv:\nbase = zeckenstiche_buffer_outline.explore(color = \"green\")\nzeckenstiche_gpd.explore(m = base, color = \"pink\")\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[5], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Interaktiv:</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> base <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">zeckenstiche_buffer_outline</span><span style=\"color:rgb(98,98,98)\">.</span>explore(color <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">green</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> zeckenstiche_gpd<span style=\"color:rgb(98,98,98)\">.</span>explore(m <span style=\"color:rgb(98,98,98)\">=</span> base, color <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">pink</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'zeckenstiche_buffer_outline' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n<!-- % Envelope -->\n## Übung  14.5\n\nBerechne das \"Envelope\" von `zeckenstiche_gpd` anhand der Beispiele in @sec-raeumliche-operationen. Speichere den Output als `zeckenstiche_envelope`.\n\n:::{.callout-note collapse=\"true\"}\n\nDenk daran, dass du zuerst noch einen Union machen musst (siehe @sec-raeumliche-operationen)\n\n:::\n\n\n\n## Übung  14.6\n\nExportiere `zeckenstiche_gpd` als \"Geopackage\" mit dem Namen \"zeckenstiche.gpkg\". Lese nochmal @sec-pythongis-formate wenn du nicht mehr weisst, wie das geht. Versuche anschliessend, \"zeckenstiche.gpkg\" wieder einzulesen.\n\n\n\n",
    "supporting": [
      "6_Uebung_14_files"
    ],
    "filters": [],
    "includes": {}
  }
}