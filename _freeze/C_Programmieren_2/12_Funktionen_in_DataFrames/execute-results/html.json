{
  "hash": "797093086b24efa090bb0082972508d7",
  "result": {
    "engine": "jupyter",
    "markdown": "# Funktionen in *DataFrames* {#sec-offset-dataframe}\n\nIn dieser Aufgabe haben wir das Ziel, die in der letzten Aufgabe (@sec-random-numbers) erstellte Funktion `offset_coordinate()` auf alle Zeckenstich-Koordinaten anwenden. Bildlich gesprochen: Wir nehmen unsere Zeckenstichdatensatz und schütteln ihn **einmal** durch. So erhalten wir einen Datensatz ähnlich wie in @fig-arcgiszecken mit dem Unterschied, dass jede Zeckenstichmeldung nicht eine *Wolke* von simulierten Punkten enthält, sondern nur einen einzelnen Punkt.\n\nNutze hier die Datei *zeckenstiche.csv* von letzter Woche (siehe @tbl-datensaetze). Erstelle ein neues Notebook und nutze nachstehenden Code um die nötigen Module und Functions zu haben:\n\n::: {#b9ee07e7 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n\ndef offset_coordinate(old, distance = 100):\n    import random\n    new = old + random.normalvariate(0,distance)\n\n    return new\n\nzeckenstiche = pd.read_csv(\"data/zeckenstiche.csv\")\n#           ______________________↗____________________\n#         < verwendet hier euren eigenen relativen pfad >\n#           -------------------------------------------\n     \n\nzeckenstiche\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[1], line 9</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span>     new <span style=\"color:rgb(98,98,98)\">=</span> old <span style=\"color:rgb(98,98,98)\">+</span> random<span style=\"color:rgb(98,98,98)\">.</span>normalvariate(<span style=\"color:rgb(98,98,98)\">0</span>,distance)\n<span class=\"ansi-green-fg ansi-bold\">      7</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> new\n<span class=\"ansi-green-fg\">----&gt; 9</span> zeckenstiche <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">pd</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">read_csv</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">data/zeckenstiche.csv</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     10</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#           ______________________↗____________________</span>\n<span class=\"ansi-green-fg ansi-bold\">     11</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#         &lt; verwendet hier euren eigenen relativen pfad &gt;</span>\n<span class=\"ansi-green-fg ansi-bold\">     12</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#           -------------------------------------------</span>\n<span class=\"ansi-green-fg ansi-bold\">     15</span> zeckenstiche\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/envs/modul-agi/lib/python3.12/site-packages/pandas/io/parsers/readers.py:1026</span>, in <span class=\"ansi-cyan-fg\">read_csv</span><span class=\"ansi-blue-fg\">(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1013</span> kwds_defaults <span style=\"color:rgb(98,98,98)\">=</span> _refine_defaults_read(\n<span class=\"ansi-green-fg ansi-bold\">   1014</span>     dialect,\n<span class=\"ansi-green-fg ansi-bold\">   1015</span>     delimiter,\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1022</span>     dtype_backend<span style=\"color:rgb(98,98,98)\">=</span>dtype_backend,\n<span class=\"ansi-green-fg ansi-bold\">   1023</span> )\n<span class=\"ansi-green-fg ansi-bold\">   1024</span> kwds<span style=\"color:rgb(98,98,98)\">.</span>update(kwds_defaults)\n<span class=\"ansi-green-fg\">-&gt; 1026</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_read</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">filepath_or_buffer</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">kwds</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/envs/modul-agi/lib/python3.12/site-packages/pandas/io/parsers/readers.py:620</span>, in <span class=\"ansi-cyan-fg\">_read</span><span class=\"ansi-blue-fg\">(filepath_or_buffer, kwds)</span>\n<span class=\"ansi-green-fg ansi-bold\">    617</span> _validate_names(kwds<span style=\"color:rgb(98,98,98)\">.</span>get(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">names</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>))\n<span class=\"ansi-green-fg ansi-bold\">    619</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Create the parser.</span>\n<span class=\"ansi-green-fg\">--&gt; 620</span> parser <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">TextFileReader</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">filepath_or_buffer</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwds</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    622</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> chunksize <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> iterator:\n<span class=\"ansi-green-fg ansi-bold\">    623</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> parser\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/envs/modul-agi/lib/python3.12/site-packages/pandas/io/parsers/readers.py:1620</span>, in <span class=\"ansi-cyan-fg\">TextFileReader.__init__</span><span class=\"ansi-blue-fg\">(self, f, engine, **kwds)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1617</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>options[<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">has_index_names</span><span style=\"color:rgb(175,0,0)\">\"</span>] <span style=\"color:rgb(98,98,98)\">=</span> kwds[<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">has_index_names</span><span style=\"color:rgb(175,0,0)\">\"</span>]\n<span class=\"ansi-green-fg ansi-bold\">   1619</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>handles: IOHandles <span style=\"color:rgb(98,98,98)\">|</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg\">-&gt; 1620</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_engine <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_make_engine</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">engine</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/envs/modul-agi/lib/python3.12/site-packages/pandas/io/parsers/readers.py:1880</span>, in <span class=\"ansi-cyan-fg\">TextFileReader._make_engine</span><span class=\"ansi-blue-fg\">(self, f, engine)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1878</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">b</span><span style=\"color:rgb(175,0,0)\">\"</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> mode:\n<span class=\"ansi-green-fg ansi-bold\">   1879</span>         mode <span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">b</span><span style=\"color:rgb(175,0,0)\">\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1880</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>handles <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">get_handle</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1881</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1882</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1883</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">encoding</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">options</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">get</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">encoding</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1884</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">compression</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">options</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">get</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">compression</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1885</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">memory_map</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">options</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">get</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">memory_map</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">False</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1886</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">is_text</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">is_text</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1887</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">errors</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">options</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">get</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">encoding_errors</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">strict</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1888</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">storage_options</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">options</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">get</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">storage_options</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">   1889</span> <span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1890</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>handles <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg ansi-bold\">   1891</span> f <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>handles<span style=\"color:rgb(98,98,98)\">.</span>handle\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/envs/modul-agi/lib/python3.12/site-packages/pandas/io/common.py:873</span>, in <span class=\"ansi-cyan-fg\">get_handle</span><span class=\"ansi-blue-fg\">(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)</span>\n<span class=\"ansi-green-fg ansi-bold\">    868</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">elif</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(handle, <span style=\"color:rgb(0,135,0)\">str</span>):\n<span class=\"ansi-green-fg ansi-bold\">    869</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># Check whether the filename is to be opened in binary mode.</span>\n<span class=\"ansi-green-fg ansi-bold\">    870</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># Binary mode does not support 'encoding' and 'newline'.</span>\n<span class=\"ansi-green-fg ansi-bold\">    871</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> ioargs<span style=\"color:rgb(98,98,98)\">.</span>encoding <span style=\"font-weight:bold;color:rgb(175,0,255)\">and</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">b</span><span style=\"color:rgb(175,0,0)\">\"</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> ioargs<span style=\"color:rgb(98,98,98)\">.</span>mode:\n<span class=\"ansi-green-fg ansi-bold\">    872</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># Encoding</span>\n<span class=\"ansi-green-fg\">--&gt; 873</span>         handle <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">open</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">    874</span> <span class=\"ansi-yellow-bg\">            </span><span class=\"ansi-yellow-bg\">handle</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">    875</span> <span class=\"ansi-yellow-bg\">            </span><span class=\"ansi-yellow-bg\">ioargs</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">    876</span> <span class=\"ansi-yellow-bg\">            </span><span class=\"ansi-yellow-bg\">encoding</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">ioargs</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">encoding</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">    877</span> <span class=\"ansi-yellow-bg\">            </span><span class=\"ansi-yellow-bg\">errors</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-yellow-bg\">errors</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">    878</span> <span class=\"ansi-yellow-bg\">            </span><span class=\"ansi-yellow-bg\">newline</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span>\n<span class=\"ansi-green-fg ansi-bold\">    879</span> <span class=\"ansi-yellow-bg\">        </span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    880</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">    881</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># Binary mode</span>\n<span class=\"ansi-green-fg ansi-bold\">    882</span>         handle <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">open</span>(handle, ioargs<span style=\"color:rgb(98,98,98)\">.</span>mode)\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: 'data/zeckenstiche.csv'</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "12_Funktionen_in_DataFrames_files"
    ],
    "filters": [],
    "includes": {}
  }
}